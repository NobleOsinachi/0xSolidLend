{
	"compiler": {
		"version": "0.8.19+commit.7dd6d404"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [],
				"name": "get",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_value",
						"type": "string"
					}
				],
				"name": "set",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"custom:dev-run-script": "file_path",
			"details": "This is a Solidity smart contract written in the Ethereum blockchain programming language. It is named \"MyContract\" and contains two functions, \"set\" and \"get\", which allow a user to set and retrieve a string value, respectively. The contract is licensed under the MIT License and includes a custom development script that can be run with the command \"dev-run-script file_path\". When the contract is deployed, the initial value of the string is set to \"default value\".",
			"kind": "dev",
			"methods": {},
			"title": "MyContract",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"MyContract.sol": "MyContract"
		},
		"evmVersion": "paris",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"MyContract.sol": {
			"keccak256": "0xf1a4a28a3dd64dee4b11b4eb7c2542e7b22f9863de62ff62a58b4dc6d792d0b5",
			"license": "MIT",
			"urls": [
				"bzz-raw://ef39ac5553f2e9e1b2ab0c7c69fb46a20ad3d90dbd9f94e03a689f71726a661d",
				"dweb:/ipfs/QmWrZT2SSpaF1zodKCk2P1ELykvhs5waavCDyssUkCMozq"
			]
		}
	},
	"version": 1
}